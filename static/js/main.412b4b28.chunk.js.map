{"version":3,"sources":["components/FilterCase/FilterCase.js","components/FilterCase/index.js","components/Filter/Filter.js","components/Filter/index.js","components/TodoItem/TodoItem.js","components/TodoItem/index.js","components/TodoList/TodoList.js","components/TodoList/index.js","components/NewItem/index.js","components/NewItem/NewItem.js","entities/TodoUnit.js","components/App/index.js","components/App/App.js","index.js"],"names":["FilterCase","props","className","onClick","type","name","value","index","defaultChecked","checked","text","Filter","filterCases","currentCaseIndex","changeFilterCase","changeFilterText","placeholder","onInput","e","target","data-toggle","map","filterCase","key","TodoItem","todoUnit","changeImportant","changeDone","removeItem","important","done","TodoList","todoList","todoItemProps","NewItem","onSubmitHandler","preventDefault","addNewTodoUnit","state","setState","onSubmit","this","onChange","React","Component","TodoUnit","App","filter","findIndex","item","some","alert","push","todoUnitForRemove","cases","todoListFilteredByText","RegExp","test","filterProps","todoListProps","getVisibleTodoList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.412b4b28.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction FilterCase(props) {\r\n  return (\r\n    <label className=\"btn btn-outline-info\">\r\n      <input\r\n        onClick={props.onClick}\r\n        type=\"radio\"\r\n        name=\"filterCase\"\r\n        value={props.index}\r\n        defaultChecked={props.checked}\r\n      />\r\n      {props.text}\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default FilterCase;\r\n","import FilterCase from './FilterCase';\r\n\r\nexport default FilterCase;\r\n","import React from 'react';\r\nimport './Filter.css';\r\nimport FilterCase from '../FilterCase';\r\n\r\nfunction Filter(props) {\r\n  const {\r\n    filterCases,\r\n    currentCaseIndex,\r\n    changeFilterCase,\r\n    changeFilterText,\r\n  } = props;\r\n\r\n  return (\r\n    <div className={'filter'}>\r\n      <input\r\n        className={'form-control filter__text'}\r\n        placeholder={'Search...'}\r\n        onInput={(e) => {\r\n          changeFilterText(e.target.value);\r\n        }}\r\n      ></input>\r\n      <div className=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\r\n        {filterCases.map((filterCase, index) => (\r\n          <FilterCase\r\n            onClick={() => {\r\n              changeFilterCase(index);\r\n            }}\r\n            text={filterCase}\r\n            checked={index === currentCaseIndex}\r\n            index={index}\r\n            key={filterCase}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import Filter from './Filter';\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport './TodoItem.css';\r\n\r\nfunction TodoItem(props) {\r\n  const { todoUnit, changeImportant, changeDone, removeItem } = props;\r\n\r\n  return (\r\n    <div className={`todo-item ${todoUnit.important ? 'todo-item--bold' : ''}`}>\r\n      {todoUnit.text}\r\n      <span className=\"todo-item__buttons-wrap\">\r\n        <button\r\n          onClick={() => {\r\n            removeItem(todoUnit);\r\n          }}\r\n          type=\"button\"\r\n          className=\"btn btn-outline-danger todo-item__button\"\r\n        >\r\n          <i className=\"far fa-trash-alt\"></i>\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            changeImportant(todoUnit);\r\n          }}\r\n          type=\"button\"\r\n          className={`btn btn${\r\n            todoUnit.important ? '' : '-outline'\r\n          }-warning todo-item__button`}\r\n        >\r\n          <i className=\"fas fa-exclamation\"></i>\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            changeDone(todoUnit);\r\n          }}\r\n          type=\"button\"\r\n          className={`btn btn${\r\n            todoUnit.done ? '' : '-outline'\r\n          }-success todo-item__button`}\r\n        >\r\n          <i className=\"fas fa-check\"></i>\r\n        </button>\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoItem;\r\n","import TodoItem from './TodoItem';\r\n\r\nexport default TodoItem;\r\n","import React from 'react';\r\nimport TodoItem from '../TodoItem';\r\n\r\nfunction TodoList(props) {\r\n  const { todoList, changeImportant, changeDone, removeItem } = props;\r\n\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {todoList.map((todoUnit) => {\r\n        const todoItemProps = {\r\n          todoUnit,\r\n          changeImportant,\r\n          changeDone,\r\n          removeItem,\r\n        };\r\n\r\n        return (\r\n          <ui className=\"list-group-item\">\r\n            <TodoItem key={todoUnit.text} {...todoItemProps} />\r\n          </ui>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import TodoList from './TodoList';\r\n\r\nexport default TodoList;\r\n","import NewItem from './NewItem';\r\n\r\nexport default NewItem;\r\n","import React from 'react';\r\nimport './NewItem.css';\r\n\r\nclass NewItem extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { text: '' };\r\n  }\r\n\r\n  onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    this.props.addNewTodoUnit(this.state.text);\r\n    this.setState({ text: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"new-item\" onSubmit={this.onSubmitHandler}>\r\n        <input\r\n          value={this.state.text}\r\n          onChange={(e) => {\r\n            this.setState({ text: e.target.value });\r\n          }}\r\n          className={'form-control new-item__text'}\r\n          placeholder={'Add new item...'}\r\n        ></input>\r\n        <button\r\n          type=\"submit\"\r\n          className={'btn btn-outline-success new-item__button'}\r\n        >\r\n          <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewItem;\r\n","class TodoUnit {\r\n  constructor(text, important = false, done = false) {\r\n    this.text = text;\r\n    this.important = important;\r\n    this.done = done;\r\n  }\r\n}\r\n\r\nexport default TodoUnit;\r\n","import App from './App';\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport Filter from '../Filter';\r\nimport TodoList from '../TodoList';\r\nimport NewItem from '../NewItem';\r\nimport TodoUnit from '../../entities/TodoUnit';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      filter: {\r\n        text: '',\r\n        cases: ['All', 'Active', 'Done'],\r\n        currentCaseIndex: 0,\r\n      },\r\n      todoList: [\r\n        new TodoUnit('Drink Coffe', false, true),\r\n        new TodoUnit('Make Awesome App', true),\r\n        new TodoUnit('Have a lunch'),\r\n      ],\r\n    };\r\n  }\r\n\r\n  getVisibleTodoList() {\r\n    const todoListFilteredByText = this.state.todoList.filter((todoUnit) =>\r\n      RegExp(this.state.filter.text).test(todoUnit.text)\r\n    );\r\n\r\n    switch (this.state.filter.currentCaseIndex) {\r\n      case 0:\r\n        return todoListFilteredByText;\r\n      case 1:\r\n        return todoListFilteredByText.filter(({ done }) => !done);\r\n      case 2:\r\n        return todoListFilteredByText.filter(({ done }) => done);\r\n      default:\r\n        return this.state.todoList;\r\n    }\r\n  }\r\n\r\n  changeFilterText = (text) => {\r\n    let filter = { ...this.state.filter };\r\n\r\n    filter.text = text;\r\n    this.setState({ filter });\r\n  };\r\n\r\n  changeFilterCase = (index) => {\r\n    let filter = this.state.filter;\r\n\r\n    filter.currentCaseIndex = index;\r\n    this.setState({ filter });\r\n  };\r\n\r\n  changeImportant = (todoUnit) => {\r\n    let todoList = this.state.todoList;\r\n    let index = todoList.findIndex((item) => item === todoUnit);\r\n\r\n    todoList[index].important = !todoUnit.important;\r\n\r\n    this.setState({ todoList });\r\n  };\r\n\r\n  changeDone = (todoUnit) => {\r\n    let todoList = this.state.todoList;\r\n    let index = todoList.findIndex((item) => item === todoUnit);\r\n\r\n    todoList[index].done = !todoUnit.done;\r\n\r\n    this.setState({ todoList });\r\n  };\r\n\r\n  addNewTodoUnit = (text) => {\r\n    if (this.state.todoList.some((todoUnit) => text === todoUnit.text)) {\r\n      alert('This item is already exists.');\r\n      return;\r\n    }\r\n\r\n    if (text !== '') {\r\n      const todoList = this.state.todoList;\r\n\r\n      todoList.push(new TodoUnit(text));\r\n      this.setState({ todoList });\r\n    }\r\n  };\r\n\r\n  removeItem = (todoUnitForRemove) => {\r\n    this.setState({\r\n      todoList: this.state.todoList.filter(\r\n        (todoUnit) => todoUnit !== todoUnitForRemove\r\n      ),\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const filterProps = {\r\n      filterCases: this.state.filter.cases,\r\n      currentCaseIndex: this.state.filter.currentCaseIndex,\r\n      changeFilterCase: this.changeFilterCase,\r\n      changeFilterText: this.changeFilterText,\r\n    };\r\n\r\n    const todoListProps = {\r\n      todoList: this.getVisibleTodoList(),\r\n      changeImportant: this.changeImportant,\r\n      changeDone: this.changeDone,\r\n      removeItem: this.removeItem,\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <h1>Todo List</h1>\r\n        <Filter {...filterProps} />\r\n        <TodoList {...todoListProps} />\r\n        <NewItem addNewTodoUnit={this.addNewTodoUnit} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}